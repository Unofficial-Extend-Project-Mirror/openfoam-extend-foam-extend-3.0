/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default Euler;
}

gradSchemes
{
    default         Gauss linear;
    grad(p)         Gauss linear;
    grad(U)         Gauss linear;
}

divSchemes
{
    default         none;
    //div(phi,U)      Gauss upwind;
    //div(phi,k)      Gauss upwind;
    //div(phi,epsilon) Gauss upwind;
    div(phi,U)      Gauss linearUpwind Gauss linear;
    div(phi,k)      Gauss linearUpwind Gauss linear;
    div(phi,epsilon) Gauss linearUpwind Gauss linear;
    div((nuEff*dev(grad(U).T()))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear limited 0.5;
    //default         none;
    //laplacian(nu,U) Gauss linear corrected;
    //laplacian(rAU,pcorr) Gauss linear corrected;
    //laplacian(rAU,p) Gauss linear corrected;
    //laplacian(diffusivity,cellMotionU) Gauss linear uncorrected;
    //laplacian(nuEff,U) Gauss linear uncorrected;
    //laplacian(DepsilonEff,epsilon) Gauss linear corrected;

    //laplacian(nuEff,U) Gauss linear corrected;
    //laplacian((1|A(U)),p) Gauss linear corrected;
    //laplacian(DkEff,k) Gauss linear corrected;
    //laplacian(DepsilonEff,epsilon) Gauss linear corrected;
    //laplacian(DREff,R) Gauss linear corrected;
    //laplacian(DnuTildaEff,nuTilda) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    //pcorr           ;
    p               ;
}

// ************************************************************************* //
