/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
//     Up
//     {
//         solver BiCGStab;
//         preconditioner Cholesky;

//         tolerance 1e-09;
//         relTol  0.0;

//         minIter 1;
//         maxIter 500;
//     }

    Up
    {
        solver          AMG;
        cycle           V-cycle;
        coarseningType  AAMG;
        norm            componentNorm;
        normComponent   0;

        nPreSweeps      2;
        nPostSweeps     2;
        groupSize       2;
        minCoarseEqns   4;
        nMaxLevels      100;
        scale           on;
        smoother        ILU;

        minIter         0;
        maxIter         100;
        tolerance       1e-7;
        relTol          0.001;
    }

    // Segregated
    p
    {
        solver           PCG;
        preconditioner   DIC;
        tolerance        1e-06;
        relTol           0.01;
    }
    U
    {
        solver           PBiCG;
        preconditioner   DILU;
        tolerance        1e-07;
        relTol           0.1;
    }
    k
    {
        solver           PBiCG;
        preconditioner   DILU;
        tolerance        1e-07;
        relTol           0.01;
    }
    epsilon
    {
        solver           PBiCG;
        preconditioner   DILU;
        tolerance        1e-07;
        relTol           0.01;
    }
}

blockSolver
{}

relaxationFactors
{
    U               0.9;
    k               0.95;
    epsilon         0.95;
}

SIMPLE
{
    nNonOrthoCorrectors 0;
}

// SIMPLE
// relaxationFactors
// {
//     p               0.3;
//     U               0.7;
//     k               0.7;
//     epsilon         0.7;
// }

// ************************************************************************* //
