/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (0 0 0)
    (1 0 0)
    (1 1 0)
    (0 1 0)
    (0 0 0.1)
    (1 0 0.1)
    (1 1 0.1)
    (0 1 0.1)

    (1 0 0)
    (2 0 0)
    (2 1 0)
    (1 1 0)
    (1 0 0.1)
    (2 0 0.1)
    (2 1 0.1)
    (1 1 0.1)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (10 10 1) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) (10 10 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    top
    {
        type wall;
        faces
        (
            (3 7 6 2)
            (11 15 14 10)
        );
    }

    bottom
    {
        type wall;
        faces
        (
            (1 5 4 0)
            (9 13 12 8)
        );
    }

    leftIn
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }

    mixpLeftOut
    {
        type mixingPlane;

        shadowPatch mixpRightIn;
        zone mixpLeftOutZone;
        ribbonPatch
        {
            discretisation bothPatches;
            stackAxis Y;
            sweepAxis Z;
        }

        coordinateSystem
        {
            type coordinateSystem;
            origin (0 0 0.005);
            axis (0 0 1);
            direction (1 0 0);
        }

        faces
        (
            (2 6 5 1)
        );
    }

    mixpRightIn
    {
        type mixingPlane;

        shadowPatch mixpLeftOut;
        zone mixpRightInZone;
        ribbonPatch
        {
            discretisation bothPatches;
            stackAxis Y;
            sweepAxis Z;
        }

        coordinateSystem
        {
            type coordinateSystem;
            origin (0 0 0.005);
            axis (0 0 1);
            direction (1 0 0);
        }

        faces
        (
            (8 12 15 11)
        );
    }

    rightOut
    {
        type patch;
        faces
        (
            (10 14 13 9)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
            (8 11 10 9)
            (12 13 14 15)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
