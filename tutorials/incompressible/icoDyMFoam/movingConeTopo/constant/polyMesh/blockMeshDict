/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (-7.5 0.001 -4.36609e-03)
    (-7 0.001 -4.36609e-03)
    (-3.5 0.001 -4.36609e-03)
    (0 0.001 -4.36609e-03)
    (-7.5 0.75 -0.0327457)
    (-7 0.75 -0.0327457)
    (-3.5 2 -0.0873219)
    (0 2 -0.0873219)
    (-7.5 2.5 -0.109152)
    (-7 2.5 -0.109152)
    (-3.5 2.5 -0.109152)
    (0 2.5 -0.109152)
    (-7.5 0.001 4.36609e-03)
    (-7 0.001 4.36609e-03)
    (-3.5 0.001 4.36609e-03)
    (0 0.001 4.36609e-03)
    (-7.5 0.75 0.0327457)
    (-7 0.75 0.0327457)
    (-3.5 2 0.0873219)
    (0 2 0.0873219)
    (-7.5 2.5 0.109152)
    (-7 2.5 0.109152)
    (-3.5 2.5 0.109152)
    (0 2.5 0.109152)
);

blocks
(
    hex (0 1 5 4 12 13 17 16) left (9 9 1) simpleGrading (1 1 1)
    hex (2 3 7 6 14 15 19 18) right (12 12 1) simpleGrading (2 0.25 1)
    hex (4 5 9 8 16 17 21 20) left (9 9 1) simpleGrading (1 1 1)
    hex (5 6 10 9 17 18 22 21) moving (30 9 1) simpleGrading (1 1 1)
    hex (6 7 11 10 18 19 23 22) right (12 9 1) simpleGrading (2 1 1)
);

edges
(
);

boundary
(
    movingWall
    {
        type wall;
        faces
        (
            (1 5 17 13)
            (5 6 18 17)
            (2 14 18 6)
        );
    }

    farFieldMoving
    {
        type patch;
        faces
        (
            (9 21 22 10)
        );
    }

    fixedWall
    {
        type wall;
        faces
        (
            (3 7 19 15)
            (7 11 23 19)
        );
    }

    axis
    {
        type symmetryPlane;
        faces
        (
            (0 1 13 12)
            (2 3 15 14)
        );
    }

    left
    {
        type patch;
        faces
        (
            (0 12 16 4)
            (4 16 20 8)
        );
    }

    farField
    {
        type patch;
        faces
        (
            (8 20 21 9)
            (10 22 23 11)
        );
    }

    back
    {
        type wedge;
        faces
        (
            (0 4 5 1)
            (2 6 7 3)
            (4 8 9 5)
            (5 9 10 6)
            (6 10 11 7)
        );
    }

    front
    {
        type wedge;
        faces
        (
            (12 13 17 16)
            (14 15 19 18)
            (16 17 21 20)
            (17 18 22 21)
            (18 19 23 22)
        );
    }
);

// ************************************************************************* //
