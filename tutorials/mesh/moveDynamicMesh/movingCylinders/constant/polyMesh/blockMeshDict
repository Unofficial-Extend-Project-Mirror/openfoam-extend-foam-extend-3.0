/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;

vertices
(
    // FRONT PLANE

    // First cylinder

    // Inner circle
    ( -0.70710677   -0.70710677    -0.05)
    (  0.70710677   -0.70710677    -0.05)
    (  0.70710677    0.70710677    -0.05)
    ( -0.70710677    0.70710677    -0.05)

    // Outer circle
    ( -1.0606601    -1.0606601     -0.05)
    (  1.0606601    -1.0606601     -0.05)
    (  1.0606601     1.0606601     -0.05)
    ( -1.0606601     1.0606601     -0.05)

    // Square
    (  -2           -2             -0.05)
    (   2           -2             -0.05)
    (   2            2             -0.05)
    (  -2            2             -0.05)

    // Outer square
    (  -2           -5             -0.05)
    (   2           -5             -0.05)
    (   2            5             -0.05)
    (  -2            5             -0.05)

    // Second cylinder

    // Inner circle
     ( 3.29289322   -0.70710677    -0.05)
    (  4.70710677   -0.70710677    -0.05)
    (  4.70710677    0.70710677    -0.05)
    (  3.29289322    0.70710677    -0.05)

    // Outer circle
    (  2.9393399    -1.0606601     -0.05)
    (  5.0606601    -1.0606601     -0.05)
    (  5.0606601     1.0606601     -0.05)
    (  2.9393399     1.0606601     -0.05)

    // Square
    (   2           -2             -0.05)
    (   6           -2             -0.05)
    (   6            2             -0.05)
    (   2            2             -0.05)

    // Outer square
    (   2           -5             -0.05)
    (   6           -5             -0.05)
    (   6            5             -0.05)
    (   2            5             -0.05)

    // Lead square

    ( -10            -5            -0.05)
    (  -2            -5            -0.05)
    ( -10             5            -0.05)
    (  -2             5            -0.05)

    // Tail square

    (   6            -5            -0.05)
    (  14            -5            -0.05)
    (   6             5            -0.05)
    (  14             5            -0.05)

    // BACK PLANE

    // First cylinder

    // Inner circle
    ( -0.70710677   -0.70710677     0.05)
    (  0.70710677   -0.70710677     0.05)
    (  0.70710677    0.70710677     0.05)
    ( -0.70710677    0.70710677     0.05)

    // Outer circle
    ( -1.0606601    -1.0606601      0.05)
    (  1.0606601    -1.0606601      0.05)
    (  1.0606601     1.0606601      0.05)
    ( -1.0606601     1.0606601      0.05)

    // Square
    (  -2           -2              0.05)
    (   2           -2              0.05)
    (   2            2              0.05)
    (  -2            2              0.05)

    // Outer square
    (  -2           -5              0.05)
    (   2           -5              0.05)
    (   2            5              0.05)
    (  -2            5              0.05)

    // Second cylinder

    // Inner circle
     ( 3.29289322   -0.70710677     0.05)
    (  4.70710677   -0.70710677     0.05)
    (  4.70710677    0.70710677     0.05)
    (  3.29289322    0.70710677     0.05)

    // Outer circle
    (  2.9393399    -1.0606601      0.05)
    (  5.0606601    -1.0606601      0.05)
    (  5.0606601     1.0606601      0.05)
    (  2.9393399     1.0606601      0.05)

    // Square
    (   2           -2              0.05)
    (   6           -2              0.05)
    (   6            2              0.05)
    (   2            2              0.05)

    // Outer square
    (   2           -5              0.05)
    (   6           -5              0.05)
    (   6            5              0.05)
    (   2            5              0.05)

    // Lead square

    ( -10            -5             0.05)
    (  -2            -5             0.05)
    ( -10             5             0.05)
    (  -2             5             0.05)

    // Tail square

    (   6            -5             0.05)
    (  14            -5             0.05)
    (   6             5             0.05)
    (  14             5             0.05)
);

blocks
(
    // First cylinder
    hex (0 4 5 1 40 44 45 41) cyl1 (7 10 1) simpleGrading (1 1 1)
    hex (1 5 6 2 41 45 46 42) cyl1 (7 10 1) simpleGrading (1 1 1)
    hex (2 6 7 3 42 46 47 43) cyl1 (7 10 1) simpleGrading (1 1 1)
    hex (3 7 4 0 43 47 44 40) cyl1 (7 10 1) simpleGrading (1 1 1)
    // Square around cylinder
    hex (4 8 9 5 44 48 49 45)   cyl1 (5 10 1) simpleGrading (1 1 1)
    hex (5 9 10 6 45 49 50 46)  cyl1 (5 10 1) simpleGrading (1 1 1)
    hex (6 10 11 7 46 50 51 47) cyl1 (5 10 1) simpleGrading (1 1 1)
    hex (7 11 8 4 47 51 48 44)  cyl1 (5 10 1) simpleGrading (1 1 1)
    // Top and bottom
    hex (12 13 9 8 52 53 49 48) c1Bot (10 10 1) simpleGrading (1 1 1)
    hex (11 10 14 15 51 50 54 55) c1Top (10 10 1) simpleGrading (1 1 1)

    // Second cylinder
    hex (16 20 21 17 56 60 61 57) cyl2 (7 10 1) simpleGrading (1 1 1)
    hex (17 21 22 18 57 61 62 58) cyl2 (7 10 1) simpleGrading (1 1 1)
    hex (18 22 23 19 58 62 63 59) cyl2 (7 10 1) simpleGrading (1 1 1)
    hex (19 23 20 16 59 63 60 56) cyl2 (7 10 1) simpleGrading (1 1 1)
    // Square around cylinder
    hex (20 24 25 21 60 64 65 61) cyl2 (5 10 1) simpleGrading (1 1 1)
    hex (21 25 26 22 61 65 66 62) cyl2 (5 10 1) simpleGrading (1 1 1)
    hex (22 26 27 23 62 66 67 63) cyl2 (5 10 1) simpleGrading (1 1 1)
    hex (23 27 24 20 63 67 64 60) cyl2 (5 10 1) simpleGrading (1 1 1)
    // Top and bottom
    hex (28 29 25 24 68 69 65 64) c2Bot (10 10 1) simpleGrading (1 1 1)
    hex (27 26 30 31 67 66 70 71) c2Top (10 10 1) simpleGrading (1 1 1)

    // Lead square
    hex (32 33 35 34 72 73 75 74) (20 20 1) simpleGrading (1 1 1)
    // Tail square
    hex (36 37 39 38 76 77 79 78) (20 20 1) simpleGrading (1 1 1)
);

edges
(
    // First cylinder, inner
    arc  0  1 (  0   -1   -0.05)
    arc  1  2 (  1    0   -0.05)
    arc  2  3 (  0    1   -0.05)
    arc  3  0 ( -1    0   -0.05)
    // First cylinder, outer
    arc 4 5 (  0   -1.5 -0.05)
    arc 5 6 (  1.5  0   -0.05)
    arc 6 7 (  0    1.5 -0.05)
    arc 7 4 ( -1.5  0   -0.05)

    // First cylinder, inner
    arc 40 41 (  0   -1    0.05)
    arc 41 42 (  1    0    0.05)
    arc 42 43 (  0    1    0.05)
    arc 43 40 ( -1    0    0.05)
    // First cylinder, outer
    arc 44 45 (  0   -1.5  0.05)
    arc 45 46 (  1.5  0    0.05)
    arc 46 47 (  0    1.5  0.05)
    arc 47 44 ( -1.5  0    0.05)

    // Second cylinder, inner
    arc 16 17 (  4   -1   -0.05)
    arc 17 18 (  5    0   -0.05)
    arc 18 19 (  4    1   -0.05)
    arc 19 16 (  3    0   -0.05)
    // Second cylinder, outer
    arc 20 21 (  4   -1.5 -0.05)
    arc 21 22 (  5.5  0   -0.05)
    arc 22 23 (  4    1.5 -0.05)
    arc 23 20 (  2.5  0   -0.05)

    // Second cylinder, inner
    arc 56 57 (  4   -1    0.05)
    arc 57 58 (  5    0    0.05)
    arc 58 59 (  4    1    0.05)
    arc 59 56 (  3    0    0.05)
    // Second cylinder, outer
    arc 60 61 (  4   -1.5  0.05)
    arc 61 62 (  5.5  0    0.05)
    arc 62 63 (  4    1.5  0.05)
    arc 63 60 (  2.5  0    0.05)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (32 72 74 34)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (37 39 79 77)
        );
    }

    bottom
    {
        type wall;
        faces
        (
            (32 33 73 72)
            (12 13 53 52)
            (28 29 69 68)
            (36 37 77 76)
        );
    }

    top
    {
        type wall;
        faces
        (
            (34 74 75 35)
            (15 55 54 14)
            (31 71 70 30)
            (38 78 79 39)
        );
    }

    firstCyl
    {
        type wall;
        faces
        (
            (0 40 41 1)
            (1 41 42 2)
            (2 42 43 3)
            (3 43 40 0)
        );
    }

    secondCyl
    {
        type wall;
        faces
        (
            (16 56 57 17)
            (17 57 58 18)
            (18 58 59 19)
            (19 59 56 16)
        );
    }

    frontIn
    {
        type            ggi;
        shadowPatch     frontOut;
        zone            frontInZone;
        bridgeOverlap   true;
        faces
        (
            (33 35 75 73)
        );
    }

    frontOut
    {
        type            ggi;
        shadowPatch     frontIn;
        zone            frontOutZone;
        bridgeOverlap   true;
        faces
        (
            (12 52 48 8)
            (8 48 51 11)
            (11 51 55 15)
        );
    }

    middleIn
    {
        type            ggi;
        shadowPatch     middleOut;
        zone            middleInZone;
        bridgeOverlap   true;
        faces
        (
            (13 9 49 53)
            (9 10 50 49)
            (10 14 54 50)
        );
    }

    middleOut
    {
        type            ggi;
        shadowPatch     middleIn;
        zone            middleOutZone;
        bridgeOverlap   true;
        faces
        (
            (28 68 64 24)
            (24 64 67 27)
            (27 67 71 31)
        );
    }

    backIn
    {
        type            ggi;
        shadowPatch     backOut;
        zone            backInZone;
        bridgeOverlap   true;
        faces
        (
            (29 25 65 69)
            (25 26 66 65)
            (26 30 70 66)
        );
    }

    backOut
    {
        type            ggi;
        shadowPatch     backIn;
        zone            backOutZone;
        bridgeOverlap   true;
        faces
        (
            (36 76 78 38)
        );
    }
);

// ************************************************************************* //
