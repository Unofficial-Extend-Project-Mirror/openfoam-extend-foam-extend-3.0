/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (0 0 0)
    (1 0 0)
    (0 1 0)
    (0 0 50)         //block one
    (1 0 50)
    (0 1 50)

    (3 0 50)         //block two
    (0 3 50)
    (5 0 50)
    (0 5 50)

    (0 0 120)
    (1 0 120)        //block three
    (0 1 120)

    (3 0 120)         //block four
    (0 3 120)
    (5 0 120)
    (0 5 120)

);

blocks
(

    hex (0 1 2 0 3 4 5 3) (10 10 50) simpleGrading (0.3 1 0.05)
    hex (3 4 5 3 10 11 12 10) (10 10 60) simpleGrading (0.3 1 20)
    hex (4 6 7 5 11 13 14 12) (20 10 60) simpleGrading (3 1 20)
    hex (6 8 9 7 13 15 16 14) (20 10 60) simpleGrading (0.3 1 20)

);

edges
(
    arc 1 2 (0.9396926 0.342020 0)
    arc 4 5 (0.9396926 0.342020 50)
    arc 6 7 (2.8190779 1.026060 50)
    arc 8 9 (4.698463 1.7101007 50)
    arc 11 12 (0.9396926 0.342020 120)
    arc 13 14 (2.8190779 1.026060 120)
    arc 15 16 (4.698463 1.7101007 120)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (10 12 11 10)
            (12 14 13 11)
            (14 16 15 13)
        );
    }
    fixedWalls
    {
        type wall;
        faces
        (
            (1 4 5 2)
            (4 6 7 5)
            (6 8 9 7)
            (8 15 16 9)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (0 1 2 0)
        );
    }
    simetry
    {
        type symmetryPlane;
        faces
        (
            (0 3 4 1)
            (0 2 5 3)
            (3 10 11 4)
            (4 11 13 6)

            (6 13 15 8)
            (3 5 12 10)
            (5 7 14 12)
            (7 9 16 14)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
