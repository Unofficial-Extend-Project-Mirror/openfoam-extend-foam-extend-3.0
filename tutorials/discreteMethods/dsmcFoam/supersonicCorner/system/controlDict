/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     dsmcFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.025;

deltaT          1e-6;

writeControl    runTime;

writeInterval   1e-3;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  no;

functions
(
    dsmcFields1
    {
        type dsmcFields;
        enabled   on;
        functionObjectLibs ( "libutilityFunctionObjects.so" );
        outputControl     outputTime;
    }
    fieldAverage1
    {
        type fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        outputControl     outputTime;
        resetOnOutput     on;
        fields
        (
            rhoN
            {
                 mean on;
                 prime2Mean off;
                 base time;
            }
            rhoM
            {
                mean on;
                prime2Mean off;
                base time;
            }
            dsmcRhoN
            {
                 mean on;
                 prime2Mean off;
                 base time;
            }
            momentum
            {
                mean on;
                prime2Mean off;
                base time;
            }
            linearKE
            {
                mean on;
                prime2Mean off;
                base time;
            }
            internalE
            {
                mean on;
                prime2Mean off;
                base time;
            }
            iDof
            {
                mean on;
                prime2Mean off;
                base time;
            }
            q
            {
                 mean on;
                 prime2Mean off;
                 base time;
            }
            fD
            {
                mean on;
                prime2Mean off;
                base time;
            }
        );
    }
);

// ************************************************************************* //
